import boto3
import json
import ember
import argparse
import numpy as np
from sklearn.preprocessing import RobustScaler
from subprocess import Popen, PIPE

def main():
    rs = RobustScaler()

    parser = argparse.ArgumentParser()
    parser.add_argument("-v", "--featureversion", type=int, default=2, help="EMBER feature version")
    parser.add_argument("binaries", metavar="BINARIES", type=str, nargs="+", help="PE files to classify")
    args = parser.parse_args()

    testpe = open(args.binaries[0],'rb').read() 
    extract = ember.PEFeatureExtractor()
    data = extract.feature_vector(testpe)
    scaled_data = rs.fit_transform([data])
    Xdata = np.reshape(scaled_data, (1, 2381))
    Xdata = Xdata.tolist()

    # Create Boto3 client with long-term access keys
    client = boto3.client('runtime.sagemaker',
                          region_name='eu-north-1',
<<<<<<< HEAD
                          aws_access_key_id='A**************',
                          aws_secret_access_key='g******************************')

    response = client.invoke_endpoint(EndpointName='sagemaker-tensorflow-serving-2024-04-06-**-**-**-***', Body=json.dumps(Xdata), ContentType='application/json')
=======
                          aws_access_key_id='AKIATCKAPBC7OZTZF25M',
                          aws_secret_access_key='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')

    response = client.invoke_endpoint(EndpointName='sagemaker-tensorflow-serving-2024-04-06-18-33-45-013', Body=json.dumps(Xdata), ContentType='application/json')
>>>>>>> 6cb82ef2535fd76aec3d016a94eb93f437fae493
    response_body = response['Body']
    out = response_body.read()
    astr = out.decode("UTF-8")
    out = json.loads(astr)
    out = out['outputs']['score']['floatVal']

    if out[0] > 0.5:
        print("Malicious")
    else:
        print("Benign")

if __name__ == "__main__":
    main()

# #!/usr/bin/env python

# import boto3
# import numpy as np
# import argparse
# import ast
# from sklearn.preprocessing import RobustScaler

# def main():
 
#     import json
#     import ember
    
#     from sklearn.preprocessing import RobustScaler
#     rs = RobustScaler()
       
#     parser = argparse.ArgumentParser()
#     parser.add_argument("-v", "--featureversion", type=int, default=2, help="EMBER feature version")
#     parser.add_argument("binaries", metavar="BINARIES", type=str, nargs="+", help="PE files to classify")
#     args = parser.parse_args()
#     #opening the downloaded PE file
#     testpe = open(args.binaries[0],'rb').read()
#     #Feature extractor class of the ember project 
#     extract = ember.PEFeatureExtractor() 
#     data = extract.feature_vector(testpe) #vectorizing the extracted features
#     scaled_data = rs.fit_transform([data])
#     Xdata = np.reshape(scaled_data,(1, 2381))
#     Xdata= Xdata.tolist()

#     client = boto3.client('runtime.sagemaker',
# 				region_name='eu-north-1',
#                               	#enter ids from AWS CLI
# 				aws_access_key_id='AKIATCKAPBC7OZTZF25M', 
# 				aws_secret_access_key='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',
# 				aws_session_token='"FwoGZXIvYXdzEF8aDJo9sc80tFyrlckdmiKtAUCuFNpgVhdI6QIHi8jKdE9tom95TyzSD0HbhklVvoSYtvEx8YkxqWDHqdNWARopJzF5tvD6a5cYVcXP9mEaPP5bxlZK+BLjjnqiyvEhxWfas1A8E5NxTOsZy4SfX7klHoW9sKIsWaCDYM/MqoxneD7SyLUr8zxyWazfv3KeJ+abu06kVrgeOdUz5mCfJC2wMF0hfdc6ZldMyEAOD1AFV5LyAVU06dIKJy663ydxKKWstbAGMi3He8j7MB2dCqEiZBxEviQqOWFBBTlwprMUlHMa8rMrXwetEAjU5T/8Vm0TLnk=')
    
#     response = client.invoke_endpoint(EndpointName='sagemaker-tensorflow-serving-2024-03-22-08-38-43-072', Body=json.dumps(Xdata))
#     response_body = response['Body']
#     out = response_body.read()
#     astr = out.decode("UTF-8")
#     out = ast.literal_eval(astr)
#     out = out['outputs']['score']['floatVal']

#     if out[0] >0.5:
#         print("Malicious")
#     else:
#         print("Benign")
		
# if __name__ == "__main__":
# 	main()

# #!/usr/bin/env python
# # import boto3
# # import numpy as np
# # import argparse
# # import ast
# # import json
# # import ember
# # from sklearn.preprocessing import RobustScaler
# # def main():
# #     parser = argparse.ArgumentParser()
# #     parser.add_argument("-v", "--featureversion", type=int, default=2, help="EMBER feature version")
# #     parser.add_argument("binaries", metavar="BINARIES", type=str, nargs="+", help="PE files to classify")
# #     args = parser.parse_args()
# #     # Open the downloaded PE file
# #     testpe = open(args.binaries[0], 'rb').read()
# #     # Feature extractor class of the ember project
# #     extract = ember.PEFeatureExtractor()
# #     data = extract.feature_vector(testpe)  # Vectorizing the extracted features
# #     # Scaling the data
# #     rs = RobustScaler()
# #     scaled_data = rs.fit_transform([data])
# #     Xdata = np.reshape(scaled_data, (1, -1)).tolist()
# #     client = boto3.client('sagemaker-runtime', region_name='eu-north-1')
# #     # Invoke the SageMaker endpoint
# #     response = client.invoke_endpoint(
# #         EndpointName='sagemaker-tensorflow-serving-2024-03-22-08-38-43-072',
# #         Body=json.dumps({"instances": Xdata}),
# #         ContentType='application/json'
# #     )
# #     response_body = response['Body']
# #     out = response_body.read().decode("utf-8")
# #     out = json.loads(out)
# #     # Extracting the score from the response
# #     score = out['predictions'][0]['score']
# #     if score > 0.5:
# #         print("Malicious")
# #     else:
# #         print("Benign")
# # if __name__ == "__main__":
# #     main()
